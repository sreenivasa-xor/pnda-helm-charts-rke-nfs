apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "spark.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "spark.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ template "spark.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "spark.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ template "spark.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "spark.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      {{- if .Values.master.prometheus.exporter.enabled }}
      volumes:
      - name: spark-exporter
        configMap:
          name: {{ template "spark.fullname" . }}-exporter
      - name: spark-graphite-mapping
        configMap:
          name: {{ template "spark.fullname" . }}-graphite-mapping
      {{- end }}
      containers:
      {{- if .Values.master.prometheus.exporter.enabled }}
      - name: {{ template "spark.fullname" . }}-exporter
        image: "{{ .Values.master.prometheus.image }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        ports:
        - containerPort: {{ .Values.master.prometheus.port }}
        command:
        - /bin/graphite_exporter
        args:
        - --graphite.mapping-config
        - /tmp/graphite_mapping.conf
        volumeMounts:
        - name: spark-graphite-mapping
          mountPath: /tmp
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- end }}
      - name: {{ template "spark.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        ports:
        - containerPort: {{ .Values.master.port }}
        - containerPort: {{ .Values.master.ui_port }}
        {{- if .Values.master.prometheus.exporter.enabled }}
        volumeMounts:
        - name: spark-exporter
          mountPath: /opt/spark/conf
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- range $key, $value := .Values.master.customEnv }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        args:
        - standalone
        - master
        - --port {{ .Values.master.port }}
        - --webui-port {{ .Values.master.ui_port }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
